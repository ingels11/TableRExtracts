% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/attr_fncs.R
\name{GetDatLabel}
\alias{GetDatLabel}
\alias{GetDatDescrip}
\alias{GetVarLabel}
\alias{GetVarLabels}
\alias{GetVarDescrip}
\alias{GetValLabel}
\alias{GetValLabels}
\alias{GetLabel}
\alias{AddDatLabel<-}
\alias{AddDatDescrip<-}
\alias{AddVarLabel<-}
\alias{AddVarLabels<-}
\alias{AddVarDescrip<-}
\alias{AddVarDescrips<-}
\alias{AddValLabel<-}
\alias{AddValLabels<-}
\alias{RemoveDatLabel<-}
\alias{RemoveDatDescrip<-}
\alias{RemoveVarLabel<-}
\alias{RemoveVarDescrip<-}
\alias{RemoveVallabel<-}
\title{Add, remove, and get dataset, variable, and value value}
\usage{
GetDatLabel(x)

GetDatDescrip(x)

GetVarLabel(x, index)

GetVarLabels(x)

GetVarDescrip(x, index)

GetValLabel(x, index, val)

GetValLabels(x, index)

GetLabel(x, index, val = NA)

AddDatLabel(x) <- value

AddDatDescrip(x) <- value

AddVarLabel(x, index) <- value

AddVarLabels(x, stop.null = FALSE) <- value

AddVarDescrip(x, index) <- value

AddVarDescrips(x) <- value

AddValLabel(x, index) <- value

AddValLabels(x) <- value

RemoveDatLabel(x) <- value

RemoveDatDescrip(x) <- value

RemoveVarLabel(x) <- value

RemoveVarDescrip(x) <- value

RemoveVallabel(x) <- value
}
\arguments{
\item{x}{a tibble}

\item{index}{either the name of a column/variable or index number}

\item{val}{specific value of a variable for which a value is to be returned}

\item{value}{variable value name as character vector}

\item{value}{variable value names as vector of character vectors}

\item{value}{value value as list}

\item{labels_lst}{value value as list of lists}
}
\value{
No return for functions with Add or Remove
Functions with Get return a character vector.
}
\description{
A set of functions that allow the user to document the variables and
associated value in a datset. The user has the option to add or remove
both variable and value value as well as return the current value.
Creating these value is useful in the other functions in the TableRExtracts
package.
}
\details{
Labels for elements of a datset are set using attributes
(see \code{\link[base]{attributes}}). There are three main types of labels
that can be set (attribute name in parentheses):
\itemize{
  \item Variable labels are short, designed for tables (label)
  \item Variable text is typically longer and more descirptive, designed
  for codebooks (shortDescription)
  \item Value labels are short, including one for each unique value a
  variable may take, designed for tables (vallabel)
}

Several prefixes, bodies, and suffixes are used throughout with function
names to allow for straightforward understanding of the utility of each
function. Functions then are of the form PrefixBodySuffix.

Prefixes include the following:
\itemize{
  \item \emph{Add}: Attach one or more value to variables or value
  \item \emph{Remove}: Remove or detach a value from a variable or value
  \item \emph{Get}: Retrieve and return a value for a speciified variable
  or value
}

Bodies include the following:
\itemize{
  \item \emph{Dat}: Dataset descriptors
  \item \emph{Var}: Variable descriptors
  \item \emph{Val}: Variable value descriptors (categorical variables)
}

Suffixes include the following:
\itemize{
  \item \emph{Label}: Create short labels used primarily in tables but
  also in codebooks
  \item \emph{Descrip}: Create longer labels used primarily in codebooks
}
Further, plural suffixes allow for setting value or texts for more than
one variable in a single call by iteratively calling the non-plural version
of the function.

\strong{Variable labels:}

Variable labels are set using AddVarLabel() and the arguments must include
the dataset as a tibble (x), the name of the variable as a character or a
number that refers to its position in the dataset (index), and the value as
a character vector (value). This label will be passed to extracts when
the variable is included and is ideal for referencing the variable in a table.

Variable texts are set using AddVarDescrip() and includes the same arguments as
with AddVarlabel(). This text will be inlcuded in a codebook created for the
dataset when the associated variable is inlcuded.

\strong{value value:}

value value are set
}
\examples{
### Add datasert label
AddDatLabel(college_grads) <- "College Graduate Earnings"
AddDatDescrip(college_grads) <-
   "Basic earnings and labor force information for recent college graduates"

### Add variable label either by variable name or location in the dataset
AddVarLabel(college_grads, "Total") <- "Total number of people with major"
AddVarLabel(college_grads, 3) <- "Total number of people with major"
AddVarLabels(college_grads) <- c("Total" = "Total number of people with major",
                                 "Men" = "Male graduates",
                                 "Women" = "Female graduates")

### Add value labels
college_grads <- AddValLabel(college_grads, "Major_category2") <-
      list(vals = c(1, 2, 3, 4, 5, 6),
           labs = c("Business, Education, and Communication",
                    "Education", "Health", "Natural Sciences",
                    "Social Sciences and Art", "Other"))
lst <- list("Major_category2" = list(vals = c(1, 2, 3, 4, 5, 6),
                                     labs = c("Business, Education, and Communication",
                                     "Education",
                                     "Health",
                                     "Natural Sciences",
                                     "Social Sciences and Art",
                                     "Other")),
            "Major_category" = list(vals = seq.int(from = 1, to = 16, by = 1),
                                    labs = "Agriculture & Natural Resources",
                                           "Arts",
                                           "Biology & life Science",
                                           "Business",
                                           "Communications & Journalism",
                                           "Computers & Mathematics",
                                           "Education",
                                           "Engineering",
                                           "Health",
                                           "Humanities & Liberal Arts",
                                           "Industrial Arts & Consumer Services",
                                           "Interdisciplinary",
                                           "Law & Public Policy",
                                           "Physical Sciences",
                                           "Psychology & Social Work",
                                           "Social Science"))

college_grads <- AddValLabels(college_grads) <- lst

### Return variable and value value
### Two ways to return, either by specifying Var or Val directly
### or indirectly through the Getlabel() function
GetVarLabel(college_grads, "Total")
GetValLabel(college_grads, "Major_category2", 1)
GetLabel(college_grads, "Total")
GetLabel(college_grads, "Major_category2", 1)

### Remove variable and value value
RemoveVarLabel(college_grads) <- "Total"
RemoveValLabel(college_grads) <- "Major_category2"
}
